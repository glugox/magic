<?php

use {{modelClassFull}};
use App\Models\User;
use function Pest\Laravel\{actingAs};
{{uses}}

/**
 * Before all, create instances of models with factories
 * that can be in relations with the model under test
 */
beforeEach(function () {
    // Create a user to authenticate
    $user = User::factory()->create();
    actingAs($user);

    // Create related models if needed
    {{runFactoriesCode}}
});

/**
* {{classDescription}}
*/
it('can list {{modelClassPlural}}', function () {
    // Act
    $page = visit('{{modelHref}}');

    // Assert
    $page->assertSee('{{indexPageTitle}}');
});

it('can create {{modelClass}}', function () {

    $page = visit('{{modelHref}}/create');

    // Wait for the customer select to be populated from the fetch api
    $page->assertDontSee('Loading...');

    // Act
    $page
            {{formFieldsCodeCreate}}
            ->press('Create')
            // Assert
            ->assertPathIs('{{modelHref}}');

    // Assert the ${{modelClassLower}} is created
    // We need to ensure we always have name or get the main field with which we can identify the created model
    //$this->assertDatabaseHas('{{modelDbTable}}', ['name' => 'Test {{modelClass}}']);
});

it('can edit an {{modelClass}}', function () {

    // Set up
    ${{modelClassLower}} = {{modelClass}}::factory()->create();
    // Act
    visit("{{modelHref}}/{${{modelClassLower}}->id}/edit")
        {{formFieldsCodeCreate}}
        ->press('Update')
        // Assert
        ->assertPathIs("{{modelHref}}/{${{modelClassLower}}->id}/edit")
        ->assertSee('{{modelClass}} updated');
});

it('can delete {{modelClass}}', function () {
    // Set up
    ${{modelClassLower}} = {{modelClass}}::factory()->create();
    // Act
    visit("{{modelHref}}/{${{modelClassLower}}->id}")
        ->press("Delete");

    // Assert the ${{modelClassLower}} is deleted
    $this->assertDatabaseMissing('{{modelDbTable}}', ['id' => ${{modelClassLower}}->id]);
});
