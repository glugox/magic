<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use Glugox\TableQuery\Services\TableQueryService;
use {{modelClassFull}};
use {{resourceClassFull}};
use Illuminate\Http\Request;
use Illuminate\Validation\ValidationException;
use Glugox\ModelMeta\Requests\MetaRequest;

/**
 * {{classDescription}}
 */
class {{controllerClass}} extends Controller
{

    /**
     * Display a listing of the resource.
     */
    public function index(MetaRequest $request)
    {
        $query = {{modelClass}}::query();
        $tableQueryService = TableQueryService::forModel({{modelClass}}::class);

         // Apply table query (search, sort, filters)
         $items = $tableQueryService->applyAll(
            $query,
            $request->get('{{searchQueryString}}', ''),
            $request->get('sortKey'),
            $request->get('sortDir')
         )->paginate();

        return {{resourceClass}}::collection($items)->response()->getData();
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(MetaRequest $request)
    {
        $validated = $request->validated();

        $item = {{modelClass}}::create($validated);

        return new {{resourceClass}}($item);
    }

    /**
     * Display the specified resource.
     */
    public function show(MetaRequest $request, {{modelClass}} ${{modelClassCamel}})
    {
        return new {{resourceClass}}(${{modelClassCamel}});
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(MetaRequest $request, {{modelClass}} ${{modelClassCamel}})
    {
        $validated = $request->validated();

        ${{modelClassCamel}}->update($validated);

        return new {{resourceClass}}(${{modelClassCamel}});
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{modelClass}} ${{modelClassCamel}})
    {
        ${{modelClassCamel}}->delete();

        return response()->json(null, 204);
    }
}
