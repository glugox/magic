<?php

namespace App\Http\Controllers\{{entitySingularName}};

use App\Http\Controllers\Controller;
use App\Services\TableQueryService;
use {{parentModelClassFull}};
use {{relatedModelClassFull}};
use App\Http\Resources\{{relatedModelResourceClass}};
use App\Http\Resources\{{parentModelResourceClass}};
use Illuminate\Http\Request;
use Inertia\Inertia;

/**
 * {{classDescription}}
 */
class {{controllerClass}} extends Controller
{
    /**
     * Constructor
     */
    public function __construct(
        protected TableQueryService $tableQueryService
    ){}

    public function index({{parentModelClass}} ${{parentModelClassLower}})
    {
        $item = new {{parentModelResourceClass}}(${{parentModelClassLower}});

        $query = ${{parentModelClassLower}}->{{relationName}}()->getQuery();
        $searchableFields = {{searchableFieldsCode}};
        $relations = {{relationNamesCode}};
        $selectFields = {{tableFieldsNamesStr}};

         // Apply table query (search, sort, filters)
         $related = $this->tableQueryService->applyAll(
            $query,
            $searchableFields,
            $relations,
            $selectFields,
            $request->get('{{searchQueryString}}', ''),
            $request->get('sortKey', 'id'),
            $request->get('sortDir', 'asc')
         )->paginate();

        return Inertia::render('{{parentModelFolderName}}/{{relationName}}/Index', [
            'item' => $item,
            '{{relationName}}' => $related,
        ]);
    }
}
