<script setup lang="ts" generic="T">
import { ref, onMounted } from "vue";
import AppLayout from '@/layouts/AppLayout.vue';
import ResourceLayout from '@/layouts/resource/Layout.vue';
import { type BreadcrumbItem, type NavItem } from '@/types';
import { edit, show } from '@/routes/{{folderName}}';
import { Head } from '@inertiajs/vue3';
import ResourceTable from '@/components/ResourceTable.vue';
import ResourceForm from '@/components/ResourceForm.vue';
import { ColumnDef } from "@tanstack/vue-table";
import HeadingSmall from '@/components/HeadingSmall.vue';
import { type DbId } from '@/types/support';
import { SquareMinus, Link, CornerDownRight, FolderTree, GitCompareArrows } from 'lucide-vue-next';
import {ResourceData} from '@/types/support';

{{mainEntityImports}}
{{relatedEntityImports}}
{{supportImports}}

type T = {{relatedEntityName}};

interface {{mainEntityName}}ApiResponse {
    data: {{mainEntityName}};
}

interface Props {
    item: {{mainEntityName}}ApiResponse;
    {{relationName}}: PaginatedResponse<{{relatedEntityName}}>;
    item_{{relationName}}_ids?: DbId[];
    filters?: TableFilters;
    showCreateForm?: boolean;
}
const { item, {{relationName}}, item_{{relationName}}_ids, filters }: Props = defineProps<Props>();

const selectedIds = ref<DbId[]>(item_{{relationName}}_ids ?? []);
const currentFilters = ref<TableFilters>(filters ?? {});

const breadcrumbs: BreadcrumbItem[] = [
    {
        title: '{{mainEntityPluralName}}',
        href: '{{href}}',
    },
];
const columns: ColumnDef<{{relatedEntityName}}>[] = get{{relatedEntityName}}Columns();
const sidebarNavItems: NavItem[] = [
    {
        title: 'General Information',
        href: edit(item.data.id),
        icon: SquareMinus
    },
    {{relationSidebarItems}}
];

onMounted(() => {
    if (!currentFilters.value.selectedIds || currentFilters.value.selectedIds.length === 0) {
        currentFilters.value.selectedIds = item_{{relationName}}_ids ?? [];
    }
})
</script>

<template>
    <Head title="{{entitySingularName}}" />
    <AppLayout :breadcrumbs="breadcrumbs">
        <div class="flex h-full flex-1 flex-col gap-4 rounded-xl p-4 overflow-x-auto">
            <div class="relative p-4 min-h-[100vh] flex-1 rounded-xl border border-sidebar-border/70 md:min-h-min dark:border-sidebar-border">
                <ResourceLayout :title="item.data.name" description="{{mainEntityName}}" :sidebar-nav-items="sidebarNavItems">
                    <div class="flex space-x-12 space-y-12 flex-wrap">
                       <div v-if="showCreateForm" class="flex flex-col space-y-6 max-w-2xl">
                           <HeadingSmall title="Add new {{relatedEntityName}}" description="Fill {{relatedEntityName}} details" />
                           <ResourceForm
                               :entity="relatedEntity"
                               :parent-entity="entity"
                               :parent-id="item.data.id"
                               :item="{{{foreignKey}}: item.data.id}"
                           />
                       </div>
                       <div class="flex flex-col space-y-6 max-w-[900px] w-full">
                           <HeadingSmall title="{{relatedEntityPluralName}}" description="Update {{relatedEntityPluralName}} for this {{mainEntityName}}" />
                           <ResourceTable
                               :data="{{relationName}}"
                               :parent-id="item.data.id"
                               :columns="columns as ColumnDef<ResourceData>[]"
                               :entity="relatedEntity"
                               :parent-entity="entity"
                               :filters="currentFilters"
                           />
                       </div>
                   </div>
                </ResourceLayout>
            </div>
        </div>
    </AppLayout>
</template>
